<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.breeze.health.mapper.UserBaseInfoMapper">
  <resultMap id="BaseResultMap" type="com.breeze.health.entity.UserBaseInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="education" jdbcType="INTEGER" property="education" />
    <result column="marriage" jdbcType="INTEGER" property="marriage" />
    <result column="son_count" jdbcType="INTEGER" property="sonCount" />
    <result column="daughter_count" jdbcType="INTEGER" property="daughterCount" />
    <result column="family_type" jdbcType="INTEGER" property="familyType" />
    <result column="family_desc" jdbcType="VARCHAR" property="familyDesc" />
    <result column="community" jdbcType="VARCHAR" property="community" />
    <result column="community_lon" jdbcType="DOUBLE" property="communityLon" />
    <result column="community_lat" jdbcType="DOUBLE" property="communityLat" />
    <result column="job" jdbcType="INTEGER" property="job" />
    <result column="religion" jdbcType="VARCHAR" property="religion" />
    <result column="habitat_income" jdbcType="INTEGER" property="habitatIncome" />
    <result column="medical_pay_way" jdbcType="INTEGER" property="medicalPayWay" />
    <result column="medical_pay_desc" jdbcType="VARCHAR" property="medicalPayDesc" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, birthday, gender, education, marriage, son_count, daughter_count, family_type, 
    family_desc, community, community_lon, community_lat, job, religion, habitat_income, 
    medical_pay_way, medical_pay_desc, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.breeze.health.entity.UserBaseInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user_base_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user_base_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user_base_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.breeze.health.entity.UserBaseInfo" useGeneratedKeys="true">
    insert into t_user_base_info (user_id, birthday, gender, 
      education, marriage, son_count, 
      daughter_count, family_type, family_desc, 
      community, community_lon, community_lat, 
      job, religion, habitat_income, 
      medical_pay_way, medical_pay_desc, create_time, 
      update_time)
    values (#{userId,jdbcType=BIGINT}, #{birthday,jdbcType=DATE}, #{gender,jdbcType=INTEGER}, 
      #{education,jdbcType=INTEGER}, #{marriage,jdbcType=INTEGER}, #{sonCount,jdbcType=INTEGER}, 
      #{daughterCount,jdbcType=INTEGER}, #{familyType,jdbcType=INTEGER}, #{familyDesc,jdbcType=VARCHAR}, 
      #{community,jdbcType=VARCHAR}, #{communityLon,jdbcType=DOUBLE}, #{communityLat,jdbcType=DOUBLE}, 
      #{job,jdbcType=INTEGER}, #{religion,jdbcType=VARCHAR}, #{habitatIncome,jdbcType=INTEGER}, 
      #{medicalPayWay,jdbcType=INTEGER}, #{medicalPayDesc,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.breeze.health.entity.UserBaseInfo" useGeneratedKeys="true">
    insert into t_user_base_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="marriage != null">
        marriage,
      </if>
      <if test="sonCount != null">
        son_count,
      </if>
      <if test="daughterCount != null">
        daughter_count,
      </if>
      <if test="familyType != null">
        family_type,
      </if>
      <if test="familyDesc != null">
        family_desc,
      </if>
      <if test="community != null">
        community,
      </if>
      <if test="communityLon != null">
        community_lon,
      </if>
      <if test="communityLat != null">
        community_lat,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="religion != null">
        religion,
      </if>
      <if test="habitatIncome != null">
        habitat_income,
      </if>
      <if test="medicalPayWay != null">
        medical_pay_way,
      </if>
      <if test="medicalPayDesc != null">
        medical_pay_desc,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="education != null">
        #{education,jdbcType=INTEGER},
      </if>
      <if test="marriage != null">
        #{marriage,jdbcType=INTEGER},
      </if>
      <if test="sonCount != null">
        #{sonCount,jdbcType=INTEGER},
      </if>
      <if test="daughterCount != null">
        #{daughterCount,jdbcType=INTEGER},
      </if>
      <if test="familyType != null">
        #{familyType,jdbcType=INTEGER},
      </if>
      <if test="familyDesc != null">
        #{familyDesc,jdbcType=VARCHAR},
      </if>
      <if test="community != null">
        #{community,jdbcType=VARCHAR},
      </if>
      <if test="communityLon != null">
        #{communityLon,jdbcType=DOUBLE},
      </if>
      <if test="communityLat != null">
        #{communityLat,jdbcType=DOUBLE},
      </if>
      <if test="job != null">
        #{job,jdbcType=INTEGER},
      </if>
      <if test="religion != null">
        #{religion,jdbcType=VARCHAR},
      </if>
      <if test="habitatIncome != null">
        #{habitatIncome,jdbcType=INTEGER},
      </if>
      <if test="medicalPayWay != null">
        #{medicalPayWay,jdbcType=INTEGER},
      </if>
      <if test="medicalPayDesc != null">
        #{medicalPayDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.breeze.health.entity.UserBaseInfoExample" resultType="java.lang.Integer">
    select count(*) from t_user_base_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.breeze.health.entity.UserBaseInfo">
    update t_user_base_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=INTEGER},
      </if>
      <if test="marriage != null">
        marriage = #{marriage,jdbcType=INTEGER},
      </if>
      <if test="sonCount != null">
        son_count = #{sonCount,jdbcType=INTEGER},
      </if>
      <if test="daughterCount != null">
        daughter_count = #{daughterCount,jdbcType=INTEGER},
      </if>
      <if test="familyType != null">
        family_type = #{familyType,jdbcType=INTEGER},
      </if>
      <if test="familyDesc != null">
        family_desc = #{familyDesc,jdbcType=VARCHAR},
      </if>
      <if test="community != null">
        community = #{community,jdbcType=VARCHAR},
      </if>
      <if test="communityLon != null">
        community_lon = #{communityLon,jdbcType=DOUBLE},
      </if>
      <if test="communityLat != null">
        community_lat = #{communityLat,jdbcType=DOUBLE},
      </if>
      <if test="job != null">
        job = #{job,jdbcType=INTEGER},
      </if>
      <if test="religion != null">
        religion = #{religion,jdbcType=VARCHAR},
      </if>
      <if test="habitatIncome != null">
        habitat_income = #{habitatIncome,jdbcType=INTEGER},
      </if>
      <if test="medicalPayWay != null">
        medical_pay_way = #{medicalPayWay,jdbcType=INTEGER},
      </if>
      <if test="medicalPayDesc != null">
        medical_pay_desc = #{medicalPayDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.breeze.health.entity.UserBaseInfo">
    update t_user_base_info
    set user_id = #{userId,jdbcType=BIGINT},
      birthday = #{birthday,jdbcType=DATE},
      gender = #{gender,jdbcType=INTEGER},
      education = #{education,jdbcType=INTEGER},
      marriage = #{marriage,jdbcType=INTEGER},
      son_count = #{sonCount,jdbcType=INTEGER},
      daughter_count = #{daughterCount,jdbcType=INTEGER},
      family_type = #{familyType,jdbcType=INTEGER},
      family_desc = #{familyDesc,jdbcType=VARCHAR},
      community = #{community,jdbcType=VARCHAR},
      community_lon = #{communityLon,jdbcType=DOUBLE},
      community_lat = #{communityLat,jdbcType=DOUBLE},
      job = #{job,jdbcType=INTEGER},
      religion = #{religion,jdbcType=VARCHAR},
      habitat_income = #{habitatIncome,jdbcType=INTEGER},
      medical_pay_way = #{medicalPayWay,jdbcType=INTEGER},
      medical_pay_desc = #{medicalPayDesc,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.breeze.health.entity.UserBaseInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="education" jdbcType="INTEGER" property="education" />
    <result column="marriage" jdbcType="INTEGER" property="marriage" />
    <result column="son_count" jdbcType="INTEGER" property="sonCount" />
    <result column="daughter_count" jdbcType="INTEGER" property="daughterCount" />
    <result column="family_type" jdbcType="INTEGER" property="familyType" />
    <result column="family_desc" jdbcType="VARCHAR" property="familyDesc" />
    <result column="community" jdbcType="VARCHAR" property="community" />
    <result column="community_lon" jdbcType="DOUBLE" property="communityLon" />
    <result column="community_lat" jdbcType="DOUBLE" property="communityLat" />
    <result column="job" jdbcType="INTEGER" property="job" />
    <result column="religion" jdbcType="VARCHAR" property="religion" />
    <result column="habitat_income" jdbcType="INTEGER" property="habitatIncome" />
    <result column="medical_pay_way" jdbcType="INTEGER" property="medicalPayWay" />
    <result column="medical_pay_desc" jdbcType="VARCHAR" property="medicalPayDesc" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, birthday, gender, education, marriage, son_count, daughter_count, family_type, 
    family_desc, community, community_lon, community_lat, job, religion, habitat_income, 
    medical_pay_way, medical_pay_desc, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.breeze.health.entity.UserBaseInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user_base_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user_base_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user_base_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.breeze.health.entity.UserBaseInfo" useGeneratedKeys="true">
    insert into t_user_base_info (user_id, birthday, gender, 
      education, marriage, son_count, 
      daughter_count, family_type, family_desc, 
      community, community_lon, community_lat, 
      job, religion, habitat_income, 
      medical_pay_way, medical_pay_desc, create_time, 
      update_time)
    values (#{userId,jdbcType=BIGINT}, #{birthday,jdbcType=DATE}, #{gender,jdbcType=INTEGER}, 
      #{education,jdbcType=INTEGER}, #{marriage,jdbcType=INTEGER}, #{sonCount,jdbcType=INTEGER}, 
      #{daughterCount,jdbcType=INTEGER}, #{familyType,jdbcType=INTEGER}, #{familyDesc,jdbcType=VARCHAR}, 
      #{community,jdbcType=VARCHAR}, #{communityLon,jdbcType=DOUBLE}, #{communityLat,jdbcType=DOUBLE}, 
      #{job,jdbcType=INTEGER}, #{religion,jdbcType=VARCHAR}, #{habitatIncome,jdbcType=INTEGER}, 
      #{medicalPayWay,jdbcType=INTEGER}, #{medicalPayDesc,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.breeze.health.entity.UserBaseInfo" useGeneratedKeys="true">
    insert into t_user_base_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="marriage != null">
        marriage,
      </if>
      <if test="sonCount != null">
        son_count,
      </if>
      <if test="daughterCount != null">
        daughter_count,
      </if>
      <if test="familyType != null">
        family_type,
      </if>
      <if test="familyDesc != null">
        family_desc,
      </if>
      <if test="community != null">
        community,
      </if>
      <if test="communityLon != null">
        community_lon,
      </if>
      <if test="communityLat != null">
        community_lat,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="religion != null">
        religion,
      </if>
      <if test="habitatIncome != null">
        habitat_income,
      </if>
      <if test="medicalPayWay != null">
        medical_pay_way,
      </if>
      <if test="medicalPayDesc != null">
        medical_pay_desc,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="education != null">
        #{education,jdbcType=INTEGER},
      </if>
      <if test="marriage != null">
        #{marriage,jdbcType=INTEGER},
      </if>
      <if test="sonCount != null">
        #{sonCount,jdbcType=INTEGER},
      </if>
      <if test="daughterCount != null">
        #{daughterCount,jdbcType=INTEGER},
      </if>
      <if test="familyType != null">
        #{familyType,jdbcType=INTEGER},
      </if>
      <if test="familyDesc != null">
        #{familyDesc,jdbcType=VARCHAR},
      </if>
      <if test="community != null">
        #{community,jdbcType=VARCHAR},
      </if>
      <if test="communityLon != null">
        #{communityLon,jdbcType=DOUBLE},
      </if>
      <if test="communityLat != null">
        #{communityLat,jdbcType=DOUBLE},
      </if>
      <if test="job != null">
        #{job,jdbcType=INTEGER},
      </if>
      <if test="religion != null">
        #{religion,jdbcType=VARCHAR},
      </if>
      <if test="habitatIncome != null">
        #{habitatIncome,jdbcType=INTEGER},
      </if>
      <if test="medicalPayWay != null">
        #{medicalPayWay,jdbcType=INTEGER},
      </if>
      <if test="medicalPayDesc != null">
        #{medicalPayDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.breeze.health.entity.UserBaseInfoExample" resultType="java.lang.Integer">
    select count(*) from t_user_base_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.breeze.health.entity.UserBaseInfo">
    update t_user_base_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=INTEGER},
      </if>
      <if test="marriage != null">
        marriage = #{marriage,jdbcType=INTEGER},
      </if>
      <if test="sonCount != null">
        son_count = #{sonCount,jdbcType=INTEGER},
      </if>
      <if test="daughterCount != null">
        daughter_count = #{daughterCount,jdbcType=INTEGER},
      </if>
      <if test="familyType != null">
        family_type = #{familyType,jdbcType=INTEGER},
      </if>
      <if test="familyDesc != null">
        family_desc = #{familyDesc,jdbcType=VARCHAR},
      </if>
      <if test="community != null">
        community = #{community,jdbcType=VARCHAR},
      </if>
      <if test="communityLon != null">
        community_lon = #{communityLon,jdbcType=DOUBLE},
      </if>
      <if test="communityLat != null">
        community_lat = #{communityLat,jdbcType=DOUBLE},
      </if>
      <if test="job != null">
        job = #{job,jdbcType=INTEGER},
      </if>
      <if test="religion != null">
        religion = #{religion,jdbcType=VARCHAR},
      </if>
      <if test="habitatIncome != null">
        habitat_income = #{habitatIncome,jdbcType=INTEGER},
      </if>
      <if test="medicalPayWay != null">
        medical_pay_way = #{medicalPayWay,jdbcType=INTEGER},
      </if>
      <if test="medicalPayDesc != null">
        medical_pay_desc = #{medicalPayDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.breeze.health.entity.UserBaseInfo">
    update t_user_base_info
    set user_id = #{userId,jdbcType=BIGINT},
      birthday = #{birthday,jdbcType=DATE},
      gender = #{gender,jdbcType=INTEGER},
      education = #{education,jdbcType=INTEGER},
      marriage = #{marriage,jdbcType=INTEGER},
      son_count = #{sonCount,jdbcType=INTEGER},
      daughter_count = #{daughterCount,jdbcType=INTEGER},
      family_type = #{familyType,jdbcType=INTEGER},
      family_desc = #{familyDesc,jdbcType=VARCHAR},
      community = #{community,jdbcType=VARCHAR},
      community_lon = #{communityLon,jdbcType=DOUBLE},
      community_lat = #{communityLat,jdbcType=DOUBLE},
      job = #{job,jdbcType=INTEGER},
      religion = #{religion,jdbcType=VARCHAR},
      habitat_income = #{habitatIncome,jdbcType=INTEGER},
      medical_pay_way = #{medicalPayWay,jdbcType=INTEGER},
      medical_pay_desc = #{medicalPayDesc,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>