<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.breeze.health.mapper.UserPsychologicalAD8Mapper" >
  <resultMap id="BaseResultMap" type="com.breeze.health.entity.UserPsychologicalAD8" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="q1" property="q1" jdbcType="INTEGER" />
    <result column="q2" property="q2" jdbcType="INTEGER" />
    <result column="q3" property="q3" jdbcType="INTEGER" />
    <result column="q4" property="q4" jdbcType="INTEGER" />
    <result column="q5" property="q5" jdbcType="INTEGER" />
    <result column="q6" property="q6" jdbcType="INTEGER" />
    <result column="q7" property="q7" jdbcType="INTEGER" />
    <result column="q8" property="q8" jdbcType="INTEGER" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, q1, q2, q3, q4, q5, q6, q7, q8, score, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.breeze.health.entity.UserPsychologicalAD8Example" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user_psychological_ad8
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_user_psychological_ad8
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_user_psychological_ad8
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.breeze.health.entity.UserPsychologicalAD8" useGeneratedKeys="true" keyProperty="id" >
    insert into t_user_psychological_ad8 (user_id, q1, q2, 
      q3, q4, q5, q6, 
      q7, q8, score, create_time, 
      update_time)
    values (#{userId,jdbcType=BIGINT}, #{q1,jdbcType=INTEGER}, #{q2,jdbcType=INTEGER}, 
      #{q3,jdbcType=INTEGER}, #{q4,jdbcType=INTEGER}, #{q5,jdbcType=INTEGER}, #{q6,jdbcType=INTEGER}, 
      #{q7,jdbcType=INTEGER}, #{q8,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.breeze.health.entity.UserPsychologicalAD8" useGeneratedKeys="true" keyProperty="id" >
    insert into t_user_psychological_ad8
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="q1 != null" >
        q1,
      </if>
      <if test="q2 != null" >
        q2,
      </if>
      <if test="q3 != null" >
        q3,
      </if>
      <if test="q4 != null" >
        q4,
      </if>
      <if test="q5 != null" >
        q5,
      </if>
      <if test="q6 != null" >
        q6,
      </if>
      <if test="q7 != null" >
        q7,
      </if>
      <if test="q8 != null" >
        q8,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="q1 != null" >
        #{q1,jdbcType=INTEGER},
      </if>
      <if test="q2 != null" >
        #{q2,jdbcType=INTEGER},
      </if>
      <if test="q3 != null" >
        #{q3,jdbcType=INTEGER},
      </if>
      <if test="q4 != null" >
        #{q4,jdbcType=INTEGER},
      </if>
      <if test="q5 != null" >
        #{q5,jdbcType=INTEGER},
      </if>
      <if test="q6 != null" >
        #{q6,jdbcType=INTEGER},
      </if>
      <if test="q7 != null" >
        #{q7,jdbcType=INTEGER},
      </if>
      <if test="q8 != null" >
        #{q8,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.breeze.health.entity.UserPsychologicalAD8Example" resultType="java.lang.Integer" >
    select count(*) from t_user_psychological_ad8
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.breeze.health.entity.UserPsychologicalAD8" >
    update t_user_psychological_ad8
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="q1 != null" >
        q1 = #{q1,jdbcType=INTEGER},
      </if>
      <if test="q2 != null" >
        q2 = #{q2,jdbcType=INTEGER},
      </if>
      <if test="q3 != null" >
        q3 = #{q3,jdbcType=INTEGER},
      </if>
      <if test="q4 != null" >
        q4 = #{q4,jdbcType=INTEGER},
      </if>
      <if test="q5 != null" >
        q5 = #{q5,jdbcType=INTEGER},
      </if>
      <if test="q6 != null" >
        q6 = #{q6,jdbcType=INTEGER},
      </if>
      <if test="q7 != null" >
        q7 = #{q7,jdbcType=INTEGER},
      </if>
      <if test="q8 != null" >
        q8 = #{q8,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.breeze.health.entity.UserPsychologicalAD8" >
    update t_user_psychological_ad8
    set user_id = #{userId,jdbcType=BIGINT},
      q1 = #{q1,jdbcType=INTEGER},
      q2 = #{q2,jdbcType=INTEGER},
      q3 = #{q3,jdbcType=INTEGER},
      q4 = #{q4,jdbcType=INTEGER},
      q5 = #{q5,jdbcType=INTEGER},
      q6 = #{q6,jdbcType=INTEGER},
      q7 = #{q7,jdbcType=INTEGER},
      q8 = #{q8,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>