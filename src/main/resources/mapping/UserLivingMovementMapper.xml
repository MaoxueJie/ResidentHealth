<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.breeze.health.mapper.UserLivingMovementMapper">
  <resultMap id="BaseResultMap" type="com.breeze.health.entity.UserLivingMovement">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="living_id" jdbcType="BIGINT" property="livingId" />
    <result column="violent_movement" jdbcType="INTEGER" property="violentMovement" />
    <result column="violent_days_per_week" jdbcType="INTEGER" property="violentDaysPerWeek" />
    <result column="violent_minute_per_day" jdbcType="INTEGER" property="violentMinutePerDay" />
    <result column="moderate_movement" jdbcType="INTEGER" property="moderateMovement" />
    <result column="moderate_days_per_week" jdbcType="INTEGER" property="moderateDaysPerWeek" />
    <result column="moderate_minute_per_day" jdbcType="INTEGER" property="moderateMinutePerDay" />
    <result column="walk_movement" jdbcType="INTEGER" property="walkMovement" />
    <result column="walk_days_per_week" jdbcType="INTEGER" property="walkDaysPerWeek" />
    <result column="walk_minute_per_day" jdbcType="INTEGER" property="walkMinutePerDay" />
    <result column="sitting_minute_per_day" jdbcType="INTEGER" property="sittingMinutePerDay" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, living_id, violent_movement, violent_days_per_week, violent_minute_per_day, moderate_movement, 
    moderate_days_per_week, moderate_minute_per_day, walk_movement, walk_days_per_week, 
    walk_minute_per_day, sitting_minute_per_day, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.breeze.health.entity.UserLivingMovementExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user_living_movement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user_living_movement
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user_living_movement
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.breeze.health.entity.UserLivingMovement" useGeneratedKeys="true">
    insert into t_user_living_movement (living_id, violent_movement, violent_days_per_week, 
      violent_minute_per_day, moderate_movement, 
      moderate_days_per_week, moderate_minute_per_day, 
      walk_movement, walk_days_per_week, walk_minute_per_day, 
      sitting_minute_per_day, create_time, update_time
      )
    values (#{livingId,jdbcType=BIGINT}, #{violentMovement,jdbcType=INTEGER}, #{violentDaysPerWeek,jdbcType=INTEGER}, 
      #{violentMinutePerDay,jdbcType=INTEGER}, #{moderateMovement,jdbcType=INTEGER}, 
      #{moderateDaysPerWeek,jdbcType=INTEGER}, #{moderateMinutePerDay,jdbcType=INTEGER}, 
      #{walkMovement,jdbcType=INTEGER}, #{walkDaysPerWeek,jdbcType=INTEGER}, #{walkMinutePerDay,jdbcType=INTEGER}, 
      #{sittingMinutePerDay,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.breeze.health.entity.UserLivingMovement" useGeneratedKeys="true">
    insert into t_user_living_movement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="livingId != null">
        living_id,
      </if>
      <if test="violentMovement != null">
        violent_movement,
      </if>
      <if test="violentDaysPerWeek != null">
        violent_days_per_week,
      </if>
      <if test="violentMinutePerDay != null">
        violent_minute_per_day,
      </if>
      <if test="moderateMovement != null">
        moderate_movement,
      </if>
      <if test="moderateDaysPerWeek != null">
        moderate_days_per_week,
      </if>
      <if test="moderateMinutePerDay != null">
        moderate_minute_per_day,
      </if>
      <if test="walkMovement != null">
        walk_movement,
      </if>
      <if test="walkDaysPerWeek != null">
        walk_days_per_week,
      </if>
      <if test="walkMinutePerDay != null">
        walk_minute_per_day,
      </if>
      <if test="sittingMinutePerDay != null">
        sitting_minute_per_day,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="livingId != null">
        #{livingId,jdbcType=BIGINT},
      </if>
      <if test="violentMovement != null">
        #{violentMovement,jdbcType=INTEGER},
      </if>
      <if test="violentDaysPerWeek != null">
        #{violentDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="violentMinutePerDay != null">
        #{violentMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="moderateMovement != null">
        #{moderateMovement,jdbcType=INTEGER},
      </if>
      <if test="moderateDaysPerWeek != null">
        #{moderateDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="moderateMinutePerDay != null">
        #{moderateMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="walkMovement != null">
        #{walkMovement,jdbcType=INTEGER},
      </if>
      <if test="walkDaysPerWeek != null">
        #{walkDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="walkMinutePerDay != null">
        #{walkMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="sittingMinutePerDay != null">
        #{sittingMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.breeze.health.entity.UserLivingMovementExample" resultType="java.lang.Integer">
    select count(*) from t_user_living_movement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.breeze.health.entity.UserLivingMovement">
    update t_user_living_movement
    <set>
      <if test="livingId != null">
        living_id = #{livingId,jdbcType=BIGINT},
      </if>
      <if test="violentMovement != null">
        violent_movement = #{violentMovement,jdbcType=INTEGER},
      </if>
      <if test="violentDaysPerWeek != null">
        violent_days_per_week = #{violentDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="violentMinutePerDay != null">
        violent_minute_per_day = #{violentMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="moderateMovement != null">
        moderate_movement = #{moderateMovement,jdbcType=INTEGER},
      </if>
      <if test="moderateDaysPerWeek != null">
        moderate_days_per_week = #{moderateDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="moderateMinutePerDay != null">
        moderate_minute_per_day = #{moderateMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="walkMovement != null">
        walk_movement = #{walkMovement,jdbcType=INTEGER},
      </if>
      <if test="walkDaysPerWeek != null">
        walk_days_per_week = #{walkDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="walkMinutePerDay != null">
        walk_minute_per_day = #{walkMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="sittingMinutePerDay != null">
        sitting_minute_per_day = #{sittingMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.breeze.health.entity.UserLivingMovement">
    update t_user_living_movement
    set living_id = #{livingId,jdbcType=BIGINT},
      violent_movement = #{violentMovement,jdbcType=INTEGER},
      violent_days_per_week = #{violentDaysPerWeek,jdbcType=INTEGER},
      violent_minute_per_day = #{violentMinutePerDay,jdbcType=INTEGER},
      moderate_movement = #{moderateMovement,jdbcType=INTEGER},
      moderate_days_per_week = #{moderateDaysPerWeek,jdbcType=INTEGER},
      moderate_minute_per_day = #{moderateMinutePerDay,jdbcType=INTEGER},
      walk_movement = #{walkMovement,jdbcType=INTEGER},
      walk_days_per_week = #{walkDaysPerWeek,jdbcType=INTEGER},
      walk_minute_per_day = #{walkMinutePerDay,jdbcType=INTEGER},
      sitting_minute_per_day = #{sittingMinutePerDay,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.breeze.health.entity.UserLivingMovement">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="living_id" jdbcType="BIGINT" property="livingId" />
    <result column="violent_movement" jdbcType="INTEGER" property="violentMovement" />
    <result column="violent_days_per_week" jdbcType="INTEGER" property="violentDaysPerWeek" />
    <result column="violent_minute_per_day" jdbcType="INTEGER" property="violentMinutePerDay" />
    <result column="moderate_movement" jdbcType="INTEGER" property="moderateMovement" />
    <result column="moderate_days_per_week" jdbcType="INTEGER" property="moderateDaysPerWeek" />
    <result column="moderate_minute_per_day" jdbcType="INTEGER" property="moderateMinutePerDay" />
    <result column="walk_movement" jdbcType="INTEGER" property="walkMovement" />
    <result column="walk_days_per_week" jdbcType="INTEGER" property="walkDaysPerWeek" />
    <result column="walk_minute_per_day" jdbcType="INTEGER" property="walkMinutePerDay" />
    <result column="sitting_minute_per_day" jdbcType="INTEGER" property="sittingMinutePerDay" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, living_id, violent_movement, violent_days_per_week, violent_minute_per_day, moderate_movement, 
    moderate_days_per_week, moderate_minute_per_day, walk_movement, walk_days_per_week, 
    walk_minute_per_day, sitting_minute_per_day, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.breeze.health.entity.UserLivingMovementExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user_living_movement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user_living_movement
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user_living_movement
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.breeze.health.entity.UserLivingMovement" useGeneratedKeys="true">
    insert into t_user_living_movement (living_id, violent_movement, violent_days_per_week, 
      violent_minute_per_day, moderate_movement, 
      moderate_days_per_week, moderate_minute_per_day, 
      walk_movement, walk_days_per_week, walk_minute_per_day, 
      sitting_minute_per_day, create_time, update_time
      )
    values (#{livingId,jdbcType=BIGINT}, #{violentMovement,jdbcType=INTEGER}, #{violentDaysPerWeek,jdbcType=INTEGER}, 
      #{violentMinutePerDay,jdbcType=INTEGER}, #{moderateMovement,jdbcType=INTEGER}, 
      #{moderateDaysPerWeek,jdbcType=INTEGER}, #{moderateMinutePerDay,jdbcType=INTEGER}, 
      #{walkMovement,jdbcType=INTEGER}, #{walkDaysPerWeek,jdbcType=INTEGER}, #{walkMinutePerDay,jdbcType=INTEGER}, 
      #{sittingMinutePerDay,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.breeze.health.entity.UserLivingMovement" useGeneratedKeys="true">
    insert into t_user_living_movement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="livingId != null">
        living_id,
      </if>
      <if test="violentMovement != null">
        violent_movement,
      </if>
      <if test="violentDaysPerWeek != null">
        violent_days_per_week,
      </if>
      <if test="violentMinutePerDay != null">
        violent_minute_per_day,
      </if>
      <if test="moderateMovement != null">
        moderate_movement,
      </if>
      <if test="moderateDaysPerWeek != null">
        moderate_days_per_week,
      </if>
      <if test="moderateMinutePerDay != null">
        moderate_minute_per_day,
      </if>
      <if test="walkMovement != null">
        walk_movement,
      </if>
      <if test="walkDaysPerWeek != null">
        walk_days_per_week,
      </if>
      <if test="walkMinutePerDay != null">
        walk_minute_per_day,
      </if>
      <if test="sittingMinutePerDay != null">
        sitting_minute_per_day,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="livingId != null">
        #{livingId,jdbcType=BIGINT},
      </if>
      <if test="violentMovement != null">
        #{violentMovement,jdbcType=INTEGER},
      </if>
      <if test="violentDaysPerWeek != null">
        #{violentDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="violentMinutePerDay != null">
        #{violentMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="moderateMovement != null">
        #{moderateMovement,jdbcType=INTEGER},
      </if>
      <if test="moderateDaysPerWeek != null">
        #{moderateDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="moderateMinutePerDay != null">
        #{moderateMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="walkMovement != null">
        #{walkMovement,jdbcType=INTEGER},
      </if>
      <if test="walkDaysPerWeek != null">
        #{walkDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="walkMinutePerDay != null">
        #{walkMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="sittingMinutePerDay != null">
        #{sittingMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.breeze.health.entity.UserLivingMovementExample" resultType="java.lang.Integer">
    select count(*) from t_user_living_movement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.breeze.health.entity.UserLivingMovement">
    update t_user_living_movement
    <set>
      <if test="livingId != null">
        living_id = #{livingId,jdbcType=BIGINT},
      </if>
      <if test="violentMovement != null">
        violent_movement = #{violentMovement,jdbcType=INTEGER},
      </if>
      <if test="violentDaysPerWeek != null">
        violent_days_per_week = #{violentDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="violentMinutePerDay != null">
        violent_minute_per_day = #{violentMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="moderateMovement != null">
        moderate_movement = #{moderateMovement,jdbcType=INTEGER},
      </if>
      <if test="moderateDaysPerWeek != null">
        moderate_days_per_week = #{moderateDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="moderateMinutePerDay != null">
        moderate_minute_per_day = #{moderateMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="walkMovement != null">
        walk_movement = #{walkMovement,jdbcType=INTEGER},
      </if>
      <if test="walkDaysPerWeek != null">
        walk_days_per_week = #{walkDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="walkMinutePerDay != null">
        walk_minute_per_day = #{walkMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="sittingMinutePerDay != null">
        sitting_minute_per_day = #{sittingMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.breeze.health.entity.UserLivingMovement">
    update t_user_living_movement
    set living_id = #{livingId,jdbcType=BIGINT},
      violent_movement = #{violentMovement,jdbcType=INTEGER},
      violent_days_per_week = #{violentDaysPerWeek,jdbcType=INTEGER},
      violent_minute_per_day = #{violentMinutePerDay,jdbcType=INTEGER},
      moderate_movement = #{moderateMovement,jdbcType=INTEGER},
      moderate_days_per_week = #{moderateDaysPerWeek,jdbcType=INTEGER},
      moderate_minute_per_day = #{moderateMinutePerDay,jdbcType=INTEGER},
      walk_movement = #{walkMovement,jdbcType=INTEGER},
      walk_days_per_week = #{walkDaysPerWeek,jdbcType=INTEGER},
      walk_minute_per_day = #{walkMinutePerDay,jdbcType=INTEGER},
      sitting_minute_per_day = #{sittingMinutePerDay,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.breeze.health.entity.UserLivingMovement">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="living_id" jdbcType="BIGINT" property="livingId" />
    <result column="violent_movement" jdbcType="INTEGER" property="violentMovement" />
    <result column="violent_days_per_week" jdbcType="INTEGER" property="violentDaysPerWeek" />
    <result column="violent_minute_per_day" jdbcType="INTEGER" property="violentMinutePerDay" />
    <result column="moderate_movement" jdbcType="INTEGER" property="moderateMovement" />
    <result column="moderate_days_per_week" jdbcType="INTEGER" property="moderateDaysPerWeek" />
    <result column="moderate_minute_per_day" jdbcType="INTEGER" property="moderateMinutePerDay" />
    <result column="walk_movement" jdbcType="INTEGER" property="walkMovement" />
    <result column="walk_days_per_week" jdbcType="INTEGER" property="walkDaysPerWeek" />
    <result column="walk_minute_per_day" jdbcType="INTEGER" property="walkMinutePerDay" />
    <result column="sitting_minute_per_day" jdbcType="INTEGER" property="sittingMinutePerDay" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, living_id, violent_movement, violent_days_per_week, violent_minute_per_day, moderate_movement, 
    moderate_days_per_week, moderate_minute_per_day, walk_movement, walk_days_per_week, 
    walk_minute_per_day, sitting_minute_per_day, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.breeze.health.entity.UserLivingMovementExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user_living_movement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user_living_movement
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user_living_movement
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.breeze.health.entity.UserLivingMovement" useGeneratedKeys="true">
    insert into t_user_living_movement (living_id, violent_movement, violent_days_per_week, 
      violent_minute_per_day, moderate_movement, 
      moderate_days_per_week, moderate_minute_per_day, 
      walk_movement, walk_days_per_week, walk_minute_per_day, 
      sitting_minute_per_day, create_time, update_time
      )
    values (#{livingId,jdbcType=BIGINT}, #{violentMovement,jdbcType=INTEGER}, #{violentDaysPerWeek,jdbcType=INTEGER}, 
      #{violentMinutePerDay,jdbcType=INTEGER}, #{moderateMovement,jdbcType=INTEGER}, 
      #{moderateDaysPerWeek,jdbcType=INTEGER}, #{moderateMinutePerDay,jdbcType=INTEGER}, 
      #{walkMovement,jdbcType=INTEGER}, #{walkDaysPerWeek,jdbcType=INTEGER}, #{walkMinutePerDay,jdbcType=INTEGER}, 
      #{sittingMinutePerDay,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.breeze.health.entity.UserLivingMovement" useGeneratedKeys="true">
    insert into t_user_living_movement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="livingId != null">
        living_id,
      </if>
      <if test="violentMovement != null">
        violent_movement,
      </if>
      <if test="violentDaysPerWeek != null">
        violent_days_per_week,
      </if>
      <if test="violentMinutePerDay != null">
        violent_minute_per_day,
      </if>
      <if test="moderateMovement != null">
        moderate_movement,
      </if>
      <if test="moderateDaysPerWeek != null">
        moderate_days_per_week,
      </if>
      <if test="moderateMinutePerDay != null">
        moderate_minute_per_day,
      </if>
      <if test="walkMovement != null">
        walk_movement,
      </if>
      <if test="walkDaysPerWeek != null">
        walk_days_per_week,
      </if>
      <if test="walkMinutePerDay != null">
        walk_minute_per_day,
      </if>
      <if test="sittingMinutePerDay != null">
        sitting_minute_per_day,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="livingId != null">
        #{livingId,jdbcType=BIGINT},
      </if>
      <if test="violentMovement != null">
        #{violentMovement,jdbcType=INTEGER},
      </if>
      <if test="violentDaysPerWeek != null">
        #{violentDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="violentMinutePerDay != null">
        #{violentMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="moderateMovement != null">
        #{moderateMovement,jdbcType=INTEGER},
      </if>
      <if test="moderateDaysPerWeek != null">
        #{moderateDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="moderateMinutePerDay != null">
        #{moderateMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="walkMovement != null">
        #{walkMovement,jdbcType=INTEGER},
      </if>
      <if test="walkDaysPerWeek != null">
        #{walkDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="walkMinutePerDay != null">
        #{walkMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="sittingMinutePerDay != null">
        #{sittingMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.breeze.health.entity.UserLivingMovementExample" resultType="java.lang.Integer">
    select count(*) from t_user_living_movement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.breeze.health.entity.UserLivingMovement">
    update t_user_living_movement
    <set>
      <if test="livingId != null">
        living_id = #{livingId,jdbcType=BIGINT},
      </if>
      <if test="violentMovement != null">
        violent_movement = #{violentMovement,jdbcType=INTEGER},
      </if>
      <if test="violentDaysPerWeek != null">
        violent_days_per_week = #{violentDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="violentMinutePerDay != null">
        violent_minute_per_day = #{violentMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="moderateMovement != null">
        moderate_movement = #{moderateMovement,jdbcType=INTEGER},
      </if>
      <if test="moderateDaysPerWeek != null">
        moderate_days_per_week = #{moderateDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="moderateMinutePerDay != null">
        moderate_minute_per_day = #{moderateMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="walkMovement != null">
        walk_movement = #{walkMovement,jdbcType=INTEGER},
      </if>
      <if test="walkDaysPerWeek != null">
        walk_days_per_week = #{walkDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="walkMinutePerDay != null">
        walk_minute_per_day = #{walkMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="sittingMinutePerDay != null">
        sitting_minute_per_day = #{sittingMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.breeze.health.entity.UserLivingMovement">
    update t_user_living_movement
    set living_id = #{livingId,jdbcType=BIGINT},
      violent_movement = #{violentMovement,jdbcType=INTEGER},
      violent_days_per_week = #{violentDaysPerWeek,jdbcType=INTEGER},
      violent_minute_per_day = #{violentMinutePerDay,jdbcType=INTEGER},
      moderate_movement = #{moderateMovement,jdbcType=INTEGER},
      moderate_days_per_week = #{moderateDaysPerWeek,jdbcType=INTEGER},
      moderate_minute_per_day = #{moderateMinutePerDay,jdbcType=INTEGER},
      walk_movement = #{walkMovement,jdbcType=INTEGER},
      walk_days_per_week = #{walkDaysPerWeek,jdbcType=INTEGER},
      walk_minute_per_day = #{walkMinutePerDay,jdbcType=INTEGER},
      sitting_minute_per_day = #{sittingMinutePerDay,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.breeze.health.entity.UserLivingMovement">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="living_id" jdbcType="BIGINT" property="livingId" />
    <result column="violent_movement" jdbcType="INTEGER" property="violentMovement" />
    <result column="violent_days_per_week" jdbcType="INTEGER" property="violentDaysPerWeek" />
    <result column="violent_minute_per_day" jdbcType="INTEGER" property="violentMinutePerDay" />
    <result column="moderate_movement" jdbcType="INTEGER" property="moderateMovement" />
    <result column="moderate_days_per_week" jdbcType="INTEGER" property="moderateDaysPerWeek" />
    <result column="moderate_minute_per_day" jdbcType="INTEGER" property="moderateMinutePerDay" />
    <result column="walk_movement" jdbcType="INTEGER" property="walkMovement" />
    <result column="walk_days_per_week" jdbcType="INTEGER" property="walkDaysPerWeek" />
    <result column="walk_minute_per_day" jdbcType="INTEGER" property="walkMinutePerDay" />
    <result column="sitting_minute_per_day" jdbcType="INTEGER" property="sittingMinutePerDay" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, living_id, violent_movement, violent_days_per_week, violent_minute_per_day, moderate_movement, 
    moderate_days_per_week, moderate_minute_per_day, walk_movement, walk_days_per_week, 
    walk_minute_per_day, sitting_minute_per_day, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.breeze.health.entity.UserLivingMovementExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user_living_movement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user_living_movement
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user_living_movement
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.breeze.health.entity.UserLivingMovement" useGeneratedKeys="true">
    insert into t_user_living_movement (living_id, violent_movement, violent_days_per_week, 
      violent_minute_per_day, moderate_movement, 
      moderate_days_per_week, moderate_minute_per_day, 
      walk_movement, walk_days_per_week, walk_minute_per_day, 
      sitting_minute_per_day, create_time, update_time
      )
    values (#{livingId,jdbcType=BIGINT}, #{violentMovement,jdbcType=INTEGER}, #{violentDaysPerWeek,jdbcType=INTEGER}, 
      #{violentMinutePerDay,jdbcType=INTEGER}, #{moderateMovement,jdbcType=INTEGER}, 
      #{moderateDaysPerWeek,jdbcType=INTEGER}, #{moderateMinutePerDay,jdbcType=INTEGER}, 
      #{walkMovement,jdbcType=INTEGER}, #{walkDaysPerWeek,jdbcType=INTEGER}, #{walkMinutePerDay,jdbcType=INTEGER}, 
      #{sittingMinutePerDay,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.breeze.health.entity.UserLivingMovement" useGeneratedKeys="true">
    insert into t_user_living_movement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="livingId != null">
        living_id,
      </if>
      <if test="violentMovement != null">
        violent_movement,
      </if>
      <if test="violentDaysPerWeek != null">
        violent_days_per_week,
      </if>
      <if test="violentMinutePerDay != null">
        violent_minute_per_day,
      </if>
      <if test="moderateMovement != null">
        moderate_movement,
      </if>
      <if test="moderateDaysPerWeek != null">
        moderate_days_per_week,
      </if>
      <if test="moderateMinutePerDay != null">
        moderate_minute_per_day,
      </if>
      <if test="walkMovement != null">
        walk_movement,
      </if>
      <if test="walkDaysPerWeek != null">
        walk_days_per_week,
      </if>
      <if test="walkMinutePerDay != null">
        walk_minute_per_day,
      </if>
      <if test="sittingMinutePerDay != null">
        sitting_minute_per_day,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="livingId != null">
        #{livingId,jdbcType=BIGINT},
      </if>
      <if test="violentMovement != null">
        #{violentMovement,jdbcType=INTEGER},
      </if>
      <if test="violentDaysPerWeek != null">
        #{violentDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="violentMinutePerDay != null">
        #{violentMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="moderateMovement != null">
        #{moderateMovement,jdbcType=INTEGER},
      </if>
      <if test="moderateDaysPerWeek != null">
        #{moderateDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="moderateMinutePerDay != null">
        #{moderateMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="walkMovement != null">
        #{walkMovement,jdbcType=INTEGER},
      </if>
      <if test="walkDaysPerWeek != null">
        #{walkDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="walkMinutePerDay != null">
        #{walkMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="sittingMinutePerDay != null">
        #{sittingMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.breeze.health.entity.UserLivingMovementExample" resultType="java.lang.Integer">
    select count(*) from t_user_living_movement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.breeze.health.entity.UserLivingMovement">
    update t_user_living_movement
    <set>
      <if test="livingId != null">
        living_id = #{livingId,jdbcType=BIGINT},
      </if>
      <if test="violentMovement != null">
        violent_movement = #{violentMovement,jdbcType=INTEGER},
      </if>
      <if test="violentDaysPerWeek != null">
        violent_days_per_week = #{violentDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="violentMinutePerDay != null">
        violent_minute_per_day = #{violentMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="moderateMovement != null">
        moderate_movement = #{moderateMovement,jdbcType=INTEGER},
      </if>
      <if test="moderateDaysPerWeek != null">
        moderate_days_per_week = #{moderateDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="moderateMinutePerDay != null">
        moderate_minute_per_day = #{moderateMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="walkMovement != null">
        walk_movement = #{walkMovement,jdbcType=INTEGER},
      </if>
      <if test="walkDaysPerWeek != null">
        walk_days_per_week = #{walkDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="walkMinutePerDay != null">
        walk_minute_per_day = #{walkMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="sittingMinutePerDay != null">
        sitting_minute_per_day = #{sittingMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.breeze.health.entity.UserLivingMovement">
    update t_user_living_movement
    set living_id = #{livingId,jdbcType=BIGINT},
      violent_movement = #{violentMovement,jdbcType=INTEGER},
      violent_days_per_week = #{violentDaysPerWeek,jdbcType=INTEGER},
      violent_minute_per_day = #{violentMinutePerDay,jdbcType=INTEGER},
      moderate_movement = #{moderateMovement,jdbcType=INTEGER},
      moderate_days_per_week = #{moderateDaysPerWeek,jdbcType=INTEGER},
      moderate_minute_per_day = #{moderateMinutePerDay,jdbcType=INTEGER},
      walk_movement = #{walkMovement,jdbcType=INTEGER},
      walk_days_per_week = #{walkDaysPerWeek,jdbcType=INTEGER},
      walk_minute_per_day = #{walkMinutePerDay,jdbcType=INTEGER},
      sitting_minute_per_day = #{sittingMinutePerDay,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.breeze.health.entity.UserLivingMovement">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="living_id" jdbcType="BIGINT" property="livingId" />
    <result column="violent_movement" jdbcType="INTEGER" property="violentMovement" />
    <result column="violent_days_per_week" jdbcType="INTEGER" property="violentDaysPerWeek" />
    <result column="violent_minute_per_day" jdbcType="INTEGER" property="violentMinutePerDay" />
    <result column="moderate_movement" jdbcType="INTEGER" property="moderateMovement" />
    <result column="moderate_days_per_week" jdbcType="INTEGER" property="moderateDaysPerWeek" />
    <result column="moderate_minute_per_day" jdbcType="INTEGER" property="moderateMinutePerDay" />
    <result column="walk_movement" jdbcType="INTEGER" property="walkMovement" />
    <result column="walk_days_per_week" jdbcType="INTEGER" property="walkDaysPerWeek" />
    <result column="walk_minute_per_day" jdbcType="INTEGER" property="walkMinutePerDay" />
    <result column="sitting_minute_per_day" jdbcType="INTEGER" property="sittingMinutePerDay" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, living_id, violent_movement, violent_days_per_week, violent_minute_per_day, moderate_movement, 
    moderate_days_per_week, moderate_minute_per_day, walk_movement, walk_days_per_week, 
    walk_minute_per_day, sitting_minute_per_day, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.breeze.health.entity.UserLivingMovementExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user_living_movement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user_living_movement
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user_living_movement
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.breeze.health.entity.UserLivingMovement" useGeneratedKeys="true">
    insert into t_user_living_movement (living_id, violent_movement, violent_days_per_week, 
      violent_minute_per_day, moderate_movement, 
      moderate_days_per_week, moderate_minute_per_day, 
      walk_movement, walk_days_per_week, walk_minute_per_day, 
      sitting_minute_per_day, create_time, update_time
      )
    values (#{livingId,jdbcType=BIGINT}, #{violentMovement,jdbcType=INTEGER}, #{violentDaysPerWeek,jdbcType=INTEGER}, 
      #{violentMinutePerDay,jdbcType=INTEGER}, #{moderateMovement,jdbcType=INTEGER}, 
      #{moderateDaysPerWeek,jdbcType=INTEGER}, #{moderateMinutePerDay,jdbcType=INTEGER}, 
      #{walkMovement,jdbcType=INTEGER}, #{walkDaysPerWeek,jdbcType=INTEGER}, #{walkMinutePerDay,jdbcType=INTEGER}, 
      #{sittingMinutePerDay,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.breeze.health.entity.UserLivingMovement" useGeneratedKeys="true">
    insert into t_user_living_movement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="livingId != null">
        living_id,
      </if>
      <if test="violentMovement != null">
        violent_movement,
      </if>
      <if test="violentDaysPerWeek != null">
        violent_days_per_week,
      </if>
      <if test="violentMinutePerDay != null">
        violent_minute_per_day,
      </if>
      <if test="moderateMovement != null">
        moderate_movement,
      </if>
      <if test="moderateDaysPerWeek != null">
        moderate_days_per_week,
      </if>
      <if test="moderateMinutePerDay != null">
        moderate_minute_per_day,
      </if>
      <if test="walkMovement != null">
        walk_movement,
      </if>
      <if test="walkDaysPerWeek != null">
        walk_days_per_week,
      </if>
      <if test="walkMinutePerDay != null">
        walk_minute_per_day,
      </if>
      <if test="sittingMinutePerDay != null">
        sitting_minute_per_day,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="livingId != null">
        #{livingId,jdbcType=BIGINT},
      </if>
      <if test="violentMovement != null">
        #{violentMovement,jdbcType=INTEGER},
      </if>
      <if test="violentDaysPerWeek != null">
        #{violentDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="violentMinutePerDay != null">
        #{violentMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="moderateMovement != null">
        #{moderateMovement,jdbcType=INTEGER},
      </if>
      <if test="moderateDaysPerWeek != null">
        #{moderateDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="moderateMinutePerDay != null">
        #{moderateMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="walkMovement != null">
        #{walkMovement,jdbcType=INTEGER},
      </if>
      <if test="walkDaysPerWeek != null">
        #{walkDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="walkMinutePerDay != null">
        #{walkMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="sittingMinutePerDay != null">
        #{sittingMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.breeze.health.entity.UserLivingMovementExample" resultType="java.lang.Integer">
    select count(*) from t_user_living_movement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.breeze.health.entity.UserLivingMovement">
    update t_user_living_movement
    <set>
      <if test="livingId != null">
        living_id = #{livingId,jdbcType=BIGINT},
      </if>
      <if test="violentMovement != null">
        violent_movement = #{violentMovement,jdbcType=INTEGER},
      </if>
      <if test="violentDaysPerWeek != null">
        violent_days_per_week = #{violentDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="violentMinutePerDay != null">
        violent_minute_per_day = #{violentMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="moderateMovement != null">
        moderate_movement = #{moderateMovement,jdbcType=INTEGER},
      </if>
      <if test="moderateDaysPerWeek != null">
        moderate_days_per_week = #{moderateDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="moderateMinutePerDay != null">
        moderate_minute_per_day = #{moderateMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="walkMovement != null">
        walk_movement = #{walkMovement,jdbcType=INTEGER},
      </if>
      <if test="walkDaysPerWeek != null">
        walk_days_per_week = #{walkDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="walkMinutePerDay != null">
        walk_minute_per_day = #{walkMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="sittingMinutePerDay != null">
        sitting_minute_per_day = #{sittingMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.breeze.health.entity.UserLivingMovement">
    update t_user_living_movement
    set living_id = #{livingId,jdbcType=BIGINT},
      violent_movement = #{violentMovement,jdbcType=INTEGER},
      violent_days_per_week = #{violentDaysPerWeek,jdbcType=INTEGER},
      violent_minute_per_day = #{violentMinutePerDay,jdbcType=INTEGER},
      moderate_movement = #{moderateMovement,jdbcType=INTEGER},
      moderate_days_per_week = #{moderateDaysPerWeek,jdbcType=INTEGER},
      moderate_minute_per_day = #{moderateMinutePerDay,jdbcType=INTEGER},
      walk_movement = #{walkMovement,jdbcType=INTEGER},
      walk_days_per_week = #{walkDaysPerWeek,jdbcType=INTEGER},
      walk_minute_per_day = #{walkMinutePerDay,jdbcType=INTEGER},
      sitting_minute_per_day = #{sittingMinutePerDay,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.breeze.health.entity.UserLivingMovement">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="violent_movement" jdbcType="INTEGER" property="violentMovement" />
    <result column="violent_days_per_week" jdbcType="INTEGER" property="violentDaysPerWeek" />
    <result column="violent_minute_per_day" jdbcType="INTEGER" property="violentMinutePerDay" />
    <result column="moderate_movement" jdbcType="INTEGER" property="moderateMovement" />
    <result column="moderate_days_per_week" jdbcType="INTEGER" property="moderateDaysPerWeek" />
    <result column="moderate_minute_per_day" jdbcType="INTEGER" property="moderateMinutePerDay" />
    <result column="walk_movement" jdbcType="INTEGER" property="walkMovement" />
    <result column="walk_days_per_week" jdbcType="INTEGER" property="walkDaysPerWeek" />
    <result column="walk_minute_per_day" jdbcType="INTEGER" property="walkMinutePerDay" />
    <result column="sitting_minute_per_day" jdbcType="INTEGER" property="sittingMinutePerDay" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, violent_movement, violent_days_per_week, violent_minute_per_day, moderate_movement, 
    moderate_days_per_week, moderate_minute_per_day, walk_movement, walk_days_per_week, 
    walk_minute_per_day, sitting_minute_per_day, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.breeze.health.entity.UserLivingMovementExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user_living_movement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      limit ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user_living_movement
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user_living_movement
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.breeze.health.entity.UserLivingMovement" useGeneratedKeys="true">
    insert into t_user_living_movement (user_id, violent_movement, violent_days_per_week, 
      violent_minute_per_day, moderate_movement, 
      moderate_days_per_week, moderate_minute_per_day, 
      walk_movement, walk_days_per_week, walk_minute_per_day, 
      sitting_minute_per_day, create_time, update_time
      )
    values (#{userId,jdbcType=BIGINT}, #{violentMovement,jdbcType=INTEGER}, #{violentDaysPerWeek,jdbcType=INTEGER}, 
      #{violentMinutePerDay,jdbcType=INTEGER}, #{moderateMovement,jdbcType=INTEGER}, 
      #{moderateDaysPerWeek,jdbcType=INTEGER}, #{moderateMinutePerDay,jdbcType=INTEGER}, 
      #{walkMovement,jdbcType=INTEGER}, #{walkDaysPerWeek,jdbcType=INTEGER}, #{walkMinutePerDay,jdbcType=INTEGER}, 
      #{sittingMinutePerDay,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.breeze.health.entity.UserLivingMovement" useGeneratedKeys="true">
    insert into t_user_living_movement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="violentMovement != null">
        violent_movement,
      </if>
      <if test="violentDaysPerWeek != null">
        violent_days_per_week,
      </if>
      <if test="violentMinutePerDay != null">
        violent_minute_per_day,
      </if>
      <if test="moderateMovement != null">
        moderate_movement,
      </if>
      <if test="moderateDaysPerWeek != null">
        moderate_days_per_week,
      </if>
      <if test="moderateMinutePerDay != null">
        moderate_minute_per_day,
      </if>
      <if test="walkMovement != null">
        walk_movement,
      </if>
      <if test="walkDaysPerWeek != null">
        walk_days_per_week,
      </if>
      <if test="walkMinutePerDay != null">
        walk_minute_per_day,
      </if>
      <if test="sittingMinutePerDay != null">
        sitting_minute_per_day,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="violentMovement != null">
        #{violentMovement,jdbcType=INTEGER},
      </if>
      <if test="violentDaysPerWeek != null">
        #{violentDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="violentMinutePerDay != null">
        #{violentMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="moderateMovement != null">
        #{moderateMovement,jdbcType=INTEGER},
      </if>
      <if test="moderateDaysPerWeek != null">
        #{moderateDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="moderateMinutePerDay != null">
        #{moderateMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="walkMovement != null">
        #{walkMovement,jdbcType=INTEGER},
      </if>
      <if test="walkDaysPerWeek != null">
        #{walkDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="walkMinutePerDay != null">
        #{walkMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="sittingMinutePerDay != null">
        #{sittingMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.breeze.health.entity.UserLivingMovementExample" resultType="java.lang.Integer">
    select count(*) from t_user_living_movement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.breeze.health.entity.UserLivingMovement">
    update t_user_living_movement
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="violentMovement != null">
        violent_movement = #{violentMovement,jdbcType=INTEGER},
      </if>
      <if test="violentDaysPerWeek != null">
        violent_days_per_week = #{violentDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="violentMinutePerDay != null">
        violent_minute_per_day = #{violentMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="moderateMovement != null">
        moderate_movement = #{moderateMovement,jdbcType=INTEGER},
      </if>
      <if test="moderateDaysPerWeek != null">
        moderate_days_per_week = #{moderateDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="moderateMinutePerDay != null">
        moderate_minute_per_day = #{moderateMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="walkMovement != null">
        walk_movement = #{walkMovement,jdbcType=INTEGER},
      </if>
      <if test="walkDaysPerWeek != null">
        walk_days_per_week = #{walkDaysPerWeek,jdbcType=INTEGER},
      </if>
      <if test="walkMinutePerDay != null">
        walk_minute_per_day = #{walkMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="sittingMinutePerDay != null">
        sitting_minute_per_day = #{sittingMinutePerDay,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.breeze.health.entity.UserLivingMovement">
    update t_user_living_movement
    set user_id = #{userId,jdbcType=BIGINT},
      violent_movement = #{violentMovement,jdbcType=INTEGER},
      violent_days_per_week = #{violentDaysPerWeek,jdbcType=INTEGER},
      violent_minute_per_day = #{violentMinutePerDay,jdbcType=INTEGER},
      moderate_movement = #{moderateMovement,jdbcType=INTEGER},
      moderate_days_per_week = #{moderateDaysPerWeek,jdbcType=INTEGER},
      moderate_minute_per_day = #{moderateMinutePerDay,jdbcType=INTEGER},
      walk_movement = #{walkMovement,jdbcType=INTEGER},
      walk_days_per_week = #{walkDaysPerWeek,jdbcType=INTEGER},
      walk_minute_per_day = #{walkMinutePerDay,jdbcType=INTEGER},
      sitting_minute_per_day = #{sittingMinutePerDay,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>