<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.breeze.health.mapper.custom.UserCustomMapper" >
  <resultMap id="BaseResultMap" type="com.breeze.health.entity.custom.SickUser" >
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="doctor_id" property="doctorId" jdbcType="BIGINT" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="gender" property="gender" jdbcType="INTEGER" />
    <result column="last_time" property="lastTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <select id="selectDoctorSicks" resultMap="BaseResultMap">
    select d.mobile,d.user_id,d.doctor_id,i.birthday,i.gender,d.last_time from (
	  select * from (select  DISTINCT doctor_id,user_id from t_doctor_user where doctor_id = #{doctorId}) tu LEFT join t_user u on u.id = tu.user_id 
	  <if test="mobile != null and mobile !=''"> 
	  	where u.mobile like '%${mobile}%'
	  </if>
	  
	) d LEFT JOIN ( select * from t_user_base_info where id in(select max(id) from t_user_base_info group by user_id)) i on d.user_id = i.user_id
	
	LEFT JOIN ( select * from t_user_sick where id in(select max(id) from t_user_sick group by user_id)) s on d.user_id = s.user_id
	
	where 1=1
	<if test="ageStartDate != null and ageEndDate != null"> 
		<![CDATA[ and i.birthday > #{ageStartDate} and i.birthday < #{ageEndDate} ]]>
	</if>
	
	<if test="sex != null"> 
		<![CDATA[ and i.gender = #{sex} ]]>
	</if>
	
	<if test="sicks != null"> 
		<foreach collection="sicks" index="index" item="item"
            open="and (" separator=" and " close=")">        
            (s.sicks like '%,${item},%' or s.sicks like '${item},%' or s.sicks like '%,${item}')
        </foreach>
	</if>
	
	order by d.last_time desc
  </select>
  
  <select id="selectFavoriteSicks" resultMap="BaseResultMap">
    select d.mobile,d.user_id,d.doctor_id,i.birthday,i.gender,d.last_time from (
	  select * from (select  DISTINCT doctor_id,user_id from t_doctor_favorites where doctor_id = #{doctorId} and (remove = 0)) tu LEFT join t_user u on u.id = tu.user_id 
	) d LEFT JOIN ( select * from t_user_base_info where id in(select max(id) from t_user_base_info group by user_id)) i on d.user_id = i.user_id
	
	order by d.last_time desc
  </select>
  
</mapper>